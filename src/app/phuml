#!/usr/bin/env php
<?php

require_once( dirname( __FILE__ ) . '/../config/config.php' );

function showHeader() 
{
    echo <<<HEADER
phUML Version 0.1 (Jakob Westhoff <jakob@php.net>)

HEADER;
}

function showUsage() 
{
    echo <<<USAGE
Usage: phuml [OPTIONS] <FILE|DIRECTORY> ... <OUTFILE>

Options: 
    -g      The structure generator to use (default: tokenizer)
    -w      The structure writer to use (default: dot)    
    -r      Scan given directories recursively

Writer options:
 Dot writer:
    -s      The style to use for output (default: default)


USAGE;
}

showHeader();

$options = getopt( 'g:w:r' );
$optionCount =   ( isset( $options['g'] ) ? 2 : 0 ) 
               + ( isset( $options['w'] ) ? 2 : 0 ) 
               + ( isset( $options['r'] ) ? 1 : 0 );

$argv = array_slice( $argv, $optionCount  + 1 );
$argc = count( $argv );

// Initialize default values
$generator = 'tokenizer';
$writer    = 'dot';

if ( isset( $options['g'] ) === true ) 
{
    $generator = $options['g'];
}

if ( isset( $options['w'] ) === true ) 
{
    $writer = $options['w'];
}

$phuml = new plPhuml();
$phuml->writer    = plStructureWriter::factory( $writer );
$phuml->generator = plStructureGenerator::factory( $generator );
$recursive        = ( isset( $options['r'] ) === true ); 

// writer specific options
if ( strtolower( $writer ) === 'dot' ) 
{
    // default style
    $style = 'default';

    $options = getopt( 's:' );
    $optionCount = ( isset( $options['s'] ) ? 2 : 0 );

    $argv = array_slice( $argv, $optionCount );
    $argc = count( $argv );

    if ( isset( $options['s'] ) === true ) 
    {
        $style = $options['s'];
    }

    $phuml->writer->style = plStructureDotWriterStyle::factory( $style );
}

if ( $argc < 2 ) 
{
    showUsage();
    exit( 1 );
}

for ( $i = 0; $i < $argc - 1; $i++ ) 
{
    if ( is_dir( $argv[$i] ) === true )  
    {
        $phuml->addDirectory( $argv[$i], 'php', $recursive );         
    } 
    else if ( is_file( $argv[$i] ) === true ) 
    {
        $phuml->addFile( $argv[$i] );
    }
}

if ( file_exists( $argv[$argc - 1] ) === true ) 
{
    echo 'The output file "', $argv[$argc - 1], '" already exists. Operation aborted.', "\n";
    exit( 2 );
}

echo 'Generating structure file "', $argv[$argc - 1], '" ...', "\n";

$phuml->generate( $argv[$argc - 1] );

echo 'Structure sucessfully generated.', "\n";

?>
